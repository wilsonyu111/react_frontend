{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\wilso\\\\OneDrive\\\\react_frontend\\\\my-app\\\\src\\\\components\\\\App.jsx\";\nimport React from \"react\";\nimport Room from \"./Room\";\nimport info from \"../info\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction createRoom(info) {\n  return /*#__PURE__*/_jsxDEV(Room, {\n    roomId: info.id,\n    temp: info.temp,\n    hub: info.hub,\n    last_active: info.last_active\n  }, info.id, false, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 7\n  }, this);\n}\n\nfunction App() {\n  function updatePageValue(element) {\n    const request = new XMLHttpRequest();\n    request.addEventListener(\"readystatechange\", () => {\n      // in async request, ready state 4 is when the request is fully done\n      // look at xml readystatechange for what each code means\n      if (request.readyState === 4) {\n        const data = request.responseText;\n        const dataMap = new Map(Object.entries(JSON.parse(data)));\n        console.log(dataMap); // document.getElementById(\"textSliderValue\").innerHTML =\n        //   dataMap.get(\"curtain_position\");\n        // document.getElementById(\"current_mode\").innerHTML =\n        //   \"current mode: \" + dataMap.get(\"curtain_mode\");\n        // document.getElementById(\"pwmSlider\").value = parseInt(\n        //   dataMap.get(\"curtain_position\")\n        // );\n      }\n    });\n    request.open(\"GET\", \"/getData\", true);\n    request.send();\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"info\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"heading\",\n      children: \"Petaluma\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), info.map(createRoom)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this); //  send get request to flask\n  // get json, parse json into hashmap\n  // loop through hashmap\n  // for each loop to create room\n}\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","Room","info","createRoom","id","temp","hub","last_active","App","updatePageValue","element","request","XMLHttpRequest","addEventListener","readyState","data","responseText","dataMap","Map","Object","entries","JSON","parse","console","log","open","send","map"],"sources":["C:/Users/wilso/OneDrive/react_frontend/my-app/src/components/App.jsx"],"sourcesContent":["import React from \"react\";\nimport Room from \"./Room\";\nimport info from \"../info\"\n\n\nfunction createRoom(info) {\n    return (\n      <Room\n        key={info.id}\n        roomId = {info.id}\n        temp={info.temp}\n        hub={info.hub}\n        last_active={info.last_active}\n      />\n    );\n   }\n   \n\nfunction App() {\n  \n  function updatePageValue(element) {\n    const request = new XMLHttpRequest();\n    request.addEventListener(\"readystatechange\", () => {\n      // in async request, ready state 4 is when the request is fully done\n      // look at xml readystatechange for what each code means\n      if (request.readyState === 4) {\n        const data = request.responseText;\n        const dataMap = new Map(Object.entries(JSON.parse(data)));\n        console.log(dataMap);\n        // document.getElementById(\"textSliderValue\").innerHTML =\n        //   dataMap.get(\"curtain_position\");\n        // document.getElementById(\"current_mode\").innerHTML =\n        //   \"current mode: \" + dataMap.get(\"curtain_mode\");\n        // document.getElementById(\"pwmSlider\").value = parseInt(\n        //   dataMap.get(\"curtain_position\")\n        // );\n      }\n    });\n    request.open(\"GET\", \"/getData\", true);\n    request.send();\n  }\n  \n\n  return (\n    <div className=\"info\">\n      <h1 className=\"heading\">Petaluma</h1>\n      {info.map(createRoom)}\n    </div> );\n    //  send get request to flask\n    // get json, parse json into hashmap\n    // loop through hashmap\n    // for each loop to create room\n   }\nexport default App;\n"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,OAAOC,IAAP,MAAiB,SAAjB;;;AAGA,SAASC,UAAT,CAAoBD,IAApB,EAA0B;EACtB,oBACE,QAAC,IAAD;IAEE,MAAM,EAAIA,IAAI,CAACE,EAFjB;IAGE,IAAI,EAAEF,IAAI,CAACG,IAHb;IAIE,GAAG,EAAEH,IAAI,CAACI,GAJZ;IAKE,WAAW,EAAEJ,IAAI,CAACK;EALpB,GACOL,IAAI,CAACE,EADZ;IAAA;IAAA;IAAA;EAAA,QADF;AASA;;AAGJ,SAASI,GAAT,GAAe;EAEb,SAASC,eAAT,CAAyBC,OAAzB,EAAkC;IAChC,MAAMC,OAAO,GAAG,IAAIC,cAAJ,EAAhB;IACAD,OAAO,CAACE,gBAAR,CAAyB,kBAAzB,EAA6C,MAAM;MACjD;MACA;MACA,IAAIF,OAAO,CAACG,UAAR,KAAuB,CAA3B,EAA8B;QAC5B,MAAMC,IAAI,GAAGJ,OAAO,CAACK,YAArB;QACA,MAAMC,OAAO,GAAG,IAAIC,GAAJ,CAAQC,MAAM,CAACC,OAAP,CAAeC,IAAI,CAACC,KAAL,CAAWP,IAAX,CAAf,CAAR,CAAhB;QACAQ,OAAO,CAACC,GAAR,CAAYP,OAAZ,EAH4B,CAI5B;QACA;QACA;QACA;QACA;QACA;QACA;MACD;IACF,CAfD;IAgBAN,OAAO,CAACc,IAAR,CAAa,KAAb,EAAoB,UAApB,EAAgC,IAAhC;IACAd,OAAO,CAACe,IAAR;EACD;;EAGD,oBACE;IAAK,SAAS,EAAC,MAAf;IAAA,wBACE;MAAI,SAAS,EAAC,SAAd;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QADF,EAEGxB,IAAI,CAACyB,GAAL,CAASxB,UAAT,CAFH;EAAA;IAAA;IAAA;IAAA;EAAA,QADF,CAzBa,CA8BX;EACA;EACA;EACA;AACA;;KAlCKK,G;AAmCT,eAAeA,GAAf"},"metadata":{},"sourceType":"module"}