{"ast":null,"code":"import React from\"react\";import Room from\"./Room\";import info from\"../info\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function createRoom(info){return/*#__PURE__*/_jsx(Room,{roomId:info.id,temp:info.temp,hub:info.hub,last_active:info.last_active},info.id);}function updatePageValue(){var request=new XMLHttpRequest();console.log(\"sending request\");request.addEventListener(\"readystatechange\",function(){// in async request, ready state 4 is when the request is fully done\n// look at xml readystatechange for what each code means\nif(request.readyState===4){var data=request.responseText;dataMap=new Map(Object.entries(JSON.parse(data)));console.log(data);}});request.open(\"GET\",\"/getData\",true);request.send();}function App(){updatePageValue();return/*#__PURE__*/_jsxs(\"div\",{className:\"info\",children:[/*#__PURE__*/_jsx(\"h1\",{className:\"heading\",children:\"Petaluma\"}),info.map(createRoom)]});//  send get request to flask\n// get json, parse json into hashmap\n// loop through hashmap\n// for each loop to create room\n}export default App;","map":{"version":3,"names":["React","Room","info","createRoom","id","temp","hub","last_active","updatePageValue","request","XMLHttpRequest","console","log","addEventListener","readyState","data","responseText","dataMap","Map","Object","entries","JSON","parse","open","send","App","map"],"sources":["C:/Users/wilso/OneDrive/react_frontend/my-app/src/components/App.jsx"],"sourcesContent":["import React from \"react\";\nimport Room from \"./Room\";\nimport info from \"../info\"\n\n\nfunction createRoom(info) {\n    return (\n      <Room\n        key={info.id}\n        roomId = {info.id}\n        temp={info.temp}\n        hub={info.hub}\n        last_active={info.last_active}\n      />\n    );\n   }\n   \n  function updatePageValue() {\n    const request = new XMLHttpRequest();\n    console.log(\"sending request\");\n    request.addEventListener(\"readystatechange\", () => {\n      // in async request, ready state 4 is when the request is fully done\n      // look at xml readystatechange for what each code means\n      if (request.readyState === 4) {\n        const data = request.responseText;\n        dataMap = new Map(Object.entries(JSON.parse(data)));\n        console.log(data);\n      }\n    });\n    request.open(\"GET\", \"/getData\", true);\n    request.send();\n  }\n\nfunction App() {\n  \n  updatePageValue();\n  \n\n  return (\n    <div className=\"info\">\n      <h1 className=\"heading\">Petaluma</h1>\n      {info.map(createRoom)}\n    </div> );\n    //  send get request to flask\n    // get json, parse json into hashmap\n    // loop through hashmap\n    // for each loop to create room\n   }\nexport default App;\n"],"mappings":"AAAA,MAAOA,MAAP,KAAkB,OAAlB,CACA,MAAOC,KAAP,KAAiB,QAAjB,CACA,MAAOC,KAAP,KAAiB,SAAjB,C,wFAGA,QAASC,WAAT,CAAoBD,IAApB,CAA0B,CACtB,mBACE,KAAC,IAAD,EAEE,MAAM,CAAIA,IAAI,CAACE,EAFjB,CAGE,IAAI,CAAEF,IAAI,CAACG,IAHb,CAIE,GAAG,CAAEH,IAAI,CAACI,GAJZ,CAKE,WAAW,CAAEJ,IAAI,CAACK,WALpB,EACOL,IAAI,CAACE,EADZ,CADF,CASA,CAEF,QAASI,gBAAT,EAA2B,CACzB,GAAMC,QAAO,CAAG,GAAIC,eAAJ,EAAhB,CACAC,OAAO,CAACC,GAAR,CAAY,iBAAZ,EACAH,OAAO,CAACI,gBAAR,CAAyB,kBAAzB,CAA6C,UAAM,CACjD;AACA;AACA,GAAIJ,OAAO,CAACK,UAAR,GAAuB,CAA3B,CAA8B,CAC5B,GAAMC,KAAI,CAAGN,OAAO,CAACO,YAArB,CACAC,OAAO,CAAG,GAAIC,IAAJ,CAAQC,MAAM,CAACC,OAAP,CAAeC,IAAI,CAACC,KAAL,CAAWP,IAAX,CAAf,CAAR,CAAV,CACAJ,OAAO,CAACC,GAAR,CAAYG,IAAZ,EACD,CACF,CARD,EASAN,OAAO,CAACc,IAAR,CAAa,KAAb,CAAoB,UAApB,CAAgC,IAAhC,EACAd,OAAO,CAACe,IAAR,GACD,CAEH,QAASC,IAAT,EAAe,CAEbjB,eAAe,GAGf,mBACE,aAAK,SAAS,CAAC,MAAf,wBACE,WAAI,SAAS,CAAC,SAAd,sBADF,CAEGN,IAAI,CAACwB,GAAL,CAASvB,UAAT,CAFH,GADF,CAKE;AACA;AACA;AACA;AACA,CACJ,cAAesB,IAAf"},"metadata":{},"sourceType":"module"}