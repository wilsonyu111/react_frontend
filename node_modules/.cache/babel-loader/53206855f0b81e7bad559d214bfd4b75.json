{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\wilso\\\\OneDrive\\\\react_frontend\\\\my-app\\\\src\\\\components\\\\App.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport Room from \"./Room\";\nimport info from \"../info\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction createRoom(info) {\n  if (info.size === 0) {\n    return /*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"loading_data\",\n      children: \" loading data... \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 7\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(Room, {\n      roomId: info.id,\n      temp: info.temp,\n      hub: info.hub,\n      last_active: info.last_active\n    }, info.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this);\n  }\n}\n\nfunction App() {\n  _s();\n\n  const [roomData, updateRoomValue] = useState(updatePageValue());\n\n  function updatePageValue() {\n    const request = new XMLHttpRequest();\n    let dataList = [];\n    console.log(\"sending request\");\n    request.addEventListener(\"readystatechange\", () => {\n      // in async request, ready state 4 is when the request is fully done\n      // look at xml readystatechange for what each code means\n      if (request.readyState === 4) {\n        const data = request.responseText;\n        const dataMap = new Map(Object.entries(JSON.parse(data)));\n        dataMap.forEach((value, key) => {\n          dataList.push(value);\n        });\n        updateRoomValue(dataMap);\n      }\n    });\n    request.open(\"GET\", \"http://192.168.0.26:5000/getData\", true);\n    request.send();\n    return dataList;\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"info\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"heading\",\n      children: \"Petaluma\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), roomData.foreach((value, key) => {\n      createRoom(value);\n    }), /*#__PURE__*/_jsxDEV(\"h2\", {\n      onClick: updatePageValue,\n      children: \" refresh \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this); //  send get request to flask\n  // get json, parse json into hashmap\n  // loop through hashmap\n  // for each loop to create room\n}\n\n_s(App, \"120FwGq7nrhxokcizorkb8tEu7Y=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","Room","info","createRoom","size","id","temp","hub","last_active","App","roomData","updateRoomValue","updatePageValue","request","XMLHttpRequest","dataList","console","log","addEventListener","readyState","data","responseText","dataMap","Map","Object","entries","JSON","parse","forEach","value","key","push","open","send","foreach"],"sources":["C:/Users/wilso/OneDrive/react_frontend/my-app/src/components/App.jsx"],"sourcesContent":["import React, {useState} from \"react\";\nimport Room from \"./Room\";\nimport info from \"../info\";\n\n\nfunction createRoom(info) {\n\n  if (info.size === 0)\n  {\n    return (\n      <h1 className=\"loading_data\"> loading data... </h1> \n    );\n  }\n  else{\n    return (\n      <Room\n        key={info.id}\n        roomId = {info.id}\n        temp={info.temp}\n        hub={info.hub}\n        last_active={info.last_active}\n      />\n    );\n  }\n}\n\n\n\nfunction App() {\n\n  const [roomData, updateRoomValue] = useState(updatePageValue());\n\n  function updatePageValue() {\n    const request = new XMLHttpRequest();\n    let dataList = [];\n    console.log(\"sending request\");\n    request.addEventListener(\"readystatechange\", () => {\n      // in async request, ready state 4 is when the request is fully done\n      // look at xml readystatechange for what each code means\n      if (request.readyState === 4) {\n        const data = request.responseText;\n        const dataMap = new Map(Object.entries(JSON.parse(data)));\n        dataMap.forEach((value, key) => {\n          dataList.push(value);\n        });\n        updateRoomValue(dataMap);\n      }\n    });\n    request.open(\"GET\", \"http://192.168.0.26:5000/getData\", true);\n    request.send();\n    return dataList;\n  }\n  \n  return (\n    <div className=\"info\">\n      <h1 className=\"heading\">Petaluma</h1>\n      {roomData.foreach((value, key) => {createRoom(value)})}\n      <h2 onClick={updatePageValue}> refresh </h2>\n    </div> );\n    //  send get request to flask\n    // get json, parse json into hashmap\n    // loop through hashmap\n    // for each loop to create room\n   }\nexport default App;\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,OAAOC,IAAP,MAAiB,SAAjB;;;AAGA,SAASC,UAAT,CAAoBD,IAApB,EAA0B;EAExB,IAAIA,IAAI,CAACE,IAAL,KAAc,CAAlB,EACA;IACE,oBACE;MAAI,SAAS,EAAC,cAAd;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QADF;EAGD,CALD,MAMI;IACF,oBACE,QAAC,IAAD;MAEE,MAAM,EAAIF,IAAI,CAACG,EAFjB;MAGE,IAAI,EAAEH,IAAI,CAACI,IAHb;MAIE,GAAG,EAAEJ,IAAI,CAACK,GAJZ;MAKE,WAAW,EAAEL,IAAI,CAACM;IALpB,GACON,IAAI,CAACG,EADZ;MAAA;MAAA;MAAA;IAAA,QADF;EASD;AACF;;AAID,SAASI,GAAT,GAAe;EAAA;;EAEb,MAAM,CAACC,QAAD,EAAWC,eAAX,IAA8BX,QAAQ,CAACY,eAAe,EAAhB,CAA5C;;EAEA,SAASA,eAAT,GAA2B;IACzB,MAAMC,OAAO,GAAG,IAAIC,cAAJ,EAAhB;IACA,IAAIC,QAAQ,GAAG,EAAf;IACAC,OAAO,CAACC,GAAR,CAAY,iBAAZ;IACAJ,OAAO,CAACK,gBAAR,CAAyB,kBAAzB,EAA6C,MAAM;MACjD;MACA;MACA,IAAIL,OAAO,CAACM,UAAR,KAAuB,CAA3B,EAA8B;QAC5B,MAAMC,IAAI,GAAGP,OAAO,CAACQ,YAArB;QACA,MAAMC,OAAO,GAAG,IAAIC,GAAJ,CAAQC,MAAM,CAACC,OAAP,CAAeC,IAAI,CAACC,KAAL,CAAWP,IAAX,CAAf,CAAR,CAAhB;QACAE,OAAO,CAACM,OAAR,CAAgB,CAACC,KAAD,EAAQC,GAAR,KAAgB;UAC9Bf,QAAQ,CAACgB,IAAT,CAAcF,KAAd;QACD,CAFD;QAGAlB,eAAe,CAACW,OAAD,CAAf;MACD;IACF,CAXD;IAYAT,OAAO,CAACmB,IAAR,CAAa,KAAb,EAAoB,kCAApB,EAAwD,IAAxD;IACAnB,OAAO,CAACoB,IAAR;IACA,OAAOlB,QAAP;EACD;;EAED,oBACE;IAAK,SAAS,EAAC,MAAf;IAAA,wBACE;MAAI,SAAS,EAAC,SAAd;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QADF,EAEGL,QAAQ,CAACwB,OAAT,CAAiB,CAACL,KAAD,EAAQC,GAAR,KAAgB;MAAC3B,UAAU,CAAC0B,KAAD,CAAV;IAAkB,CAApD,CAFH,eAGE;MAAI,OAAO,EAAEjB,eAAb;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAHF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF,CAzBa,CA+BX;EACA;EACA;EACA;AACA;;GAnCKH,G;;KAAAA,G;AAoCT,eAAeA,GAAf"},"metadata":{},"sourceType":"module"}