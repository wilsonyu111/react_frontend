{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\wilso\\\\OneDrive\\\\react_frontend\\\\my-app\\\\src\\\\components\\\\App.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport Room from \"./Room\";\nimport info from \"../info\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction createRoom(info) {\n  return /*#__PURE__*/_jsxDEV(Room, {\n    roomId: info.id,\n    temp: info.temp,\n    hub: info.hub,\n    last_active: info.last_active\n  }, info.id, false, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 7\n  }, this);\n}\n\nfunction App() {\n  _s();\n\n  setInterval(updatePageValue, 10000);\n  const [rooms, updateRoomValue] = useState(\"loading values\");\n\n  function updatePageValue() {\n    const request = new XMLHttpRequest();\n    let dataMap = new Map();\n    console.log(\"sending request\");\n    request.addEventListener(\"readystatechange\", () => {\n      // in async request, ready state 4 is when the request is fully done\n      // look at xml readystatechange for what each code means\n      if (request.readyState === 4) {\n        const data = request.responseText;\n        dataMap = new Map(Object.entries(JSON.parse(data))); // console.log(dataMap);\n      }\n    });\n    request.open(\"GET\", \"http://192.168.0.26:5000/getData\", true);\n    request.send();\n    return dataMap;\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"info\",\n    children: /*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"heading\",\n      children: \"Petaluma\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this); //  send get request to flask\n  // get json, parse json into hashmap\n  // loop through hashmap\n  // for each loop to create room\n}\n\n_s(App, \"tYMqXqUWJsFMSoDvlfhiZkHpIr0=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","Room","info","createRoom","id","temp","hub","last_active","App","setInterval","updatePageValue","rooms","updateRoomValue","request","XMLHttpRequest","dataMap","Map","console","log","addEventListener","readyState","data","responseText","Object","entries","JSON","parse","open","send"],"sources":["C:/Users/wilso/OneDrive/react_frontend/my-app/src/components/App.jsx"],"sourcesContent":["import React, {useState} from \"react\";\nimport Room from \"./Room\";\nimport info from \"../info\";\n\n\nfunction createRoom(info) {\n    return (\n      <Room\n        key={info.id}\n        roomId = {info.id}\n        temp={info.temp}\n        hub={info.hub}\n        last_active={info.last_active}\n      />\n    );\n   }\n\nfunction App() {\n\n  setInterval(updatePageValue, 10000);\n\n  const [rooms, updateRoomValue] = useState(\"loading values\")\n\n  function updatePageValue() {\n    const request = new XMLHttpRequest();\n    let dataMap = new Map();\n    console.log(\"sending request\");\n    request.addEventListener(\"readystatechange\", () => {\n      // in async request, ready state 4 is when the request is fully done\n      // look at xml readystatechange for what each code means\n      if (request.readyState === 4) {\n        const data = request.responseText;\n        dataMap = new Map(Object.entries(JSON.parse(data)));\n        // console.log(dataMap);\n      }\n    });\n    request.open(\"GET\", \"http://192.168.0.26:5000/getData\", true);\n    request.send();\n    return dataMap;\n  }\n  \n  return (\n    <div className=\"info\">\n      <h1 className=\"heading\">Petaluma</h1>\n      {/* {rooms}\n      <h2 onClick={updatePageValue}> refresh </h2> */}\n    </div> );\n    //  send get request to flask\n    // get json, parse json into hashmap\n    // loop through hashmap\n    // for each loop to create room\n   }\nexport default App;\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,OAAOC,IAAP,MAAiB,SAAjB;;;AAGA,SAASC,UAAT,CAAoBD,IAApB,EAA0B;EACtB,oBACE,QAAC,IAAD;IAEE,MAAM,EAAIA,IAAI,CAACE,EAFjB;IAGE,IAAI,EAAEF,IAAI,CAACG,IAHb;IAIE,GAAG,EAAEH,IAAI,CAACI,GAJZ;IAKE,WAAW,EAAEJ,IAAI,CAACK;EALpB,GACOL,IAAI,CAACE,EADZ;IAAA;IAAA;IAAA;EAAA,QADF;AASA;;AAEJ,SAASI,GAAT,GAAe;EAAA;;EAEbC,WAAW,CAACC,eAAD,EAAkB,KAAlB,CAAX;EAEA,MAAM,CAACC,KAAD,EAAQC,eAAR,IAA2BZ,QAAQ,CAAC,gBAAD,CAAzC;;EAEA,SAASU,eAAT,GAA2B;IACzB,MAAMG,OAAO,GAAG,IAAIC,cAAJ,EAAhB;IACA,IAAIC,OAAO,GAAG,IAAIC,GAAJ,EAAd;IACAC,OAAO,CAACC,GAAR,CAAY,iBAAZ;IACAL,OAAO,CAACM,gBAAR,CAAyB,kBAAzB,EAA6C,MAAM;MACjD;MACA;MACA,IAAIN,OAAO,CAACO,UAAR,KAAuB,CAA3B,EAA8B;QAC5B,MAAMC,IAAI,GAAGR,OAAO,CAACS,YAArB;QACAP,OAAO,GAAG,IAAIC,GAAJ,CAAQO,MAAM,CAACC,OAAP,CAAeC,IAAI,CAACC,KAAL,CAAWL,IAAX,CAAf,CAAR,CAAV,CAF4B,CAG5B;MACD;IACF,CARD;IASAR,OAAO,CAACc,IAAR,CAAa,KAAb,EAAoB,kCAApB,EAAwD,IAAxD;IACAd,OAAO,CAACe,IAAR;IACA,OAAOb,OAAP;EACD;;EAED,oBACE;IAAK,SAAS,EAAC,MAAf;IAAA,uBACE;MAAI,SAAS,EAAC,SAAd;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EADF;IAAA;IAAA;IAAA;EAAA,QADF,CAxBa,CA8BX;EACA;EACA;EACA;AACA;;GAlCKP,G;;KAAAA,G;AAmCT,eAAeA,GAAf"},"metadata":{},"sourceType":"module"}